import java.util.Comparator;

public class BinarySearchDeluxe {
	
    // Return the index of the first key in a[] that equals the search key, or -1 if no such key.
    public static <Key> int firstIndexOf(Key[] a, Key key, Comparator<Key> comparator)
    {
    	int index = -1;
    	
    	for(int start=0, end=a.length-1, current=-1, range=end-start; start<end; range=end-start)
    	{
    		current=start+range/2;
    		switch (comparator.compare(key, a[current]))
    		{
    			case -1:
    				end-=(range/2);
    				break;
    			case 1:
    				start+=(range/2);
    				break;
    			default:
    				index=current;
    				break;
    		}
    	}
    	
    	for(;a[index]==a[index-1];index--);
    	
		return index;
    }

    // Return the index of the last key in a[] that equals the search key, or -1 if no such key.
    public static <Key> int lastIndexOf(Key[] a, Key key, Comparator<Key> comparator)
    {
    	return 0;
    }
    
    private static <Key> int search(Key[] a, Key key, Comparator<Key> comparator)
    {
    	return 0;
    }
    
	public static void main(String[] args) {
		int[] a = new int[]{1,1,2,2,3,3,4,4};
		
		System.out.println(BinarySearchDeluxe.firstIndexOf(a, 2, new Comparator{
			
		});
	}

}
