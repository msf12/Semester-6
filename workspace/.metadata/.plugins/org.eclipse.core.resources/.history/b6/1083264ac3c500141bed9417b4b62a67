

public class PointST<Value> {
	
	private RedBlackBST<Point2D, Value> st;
	
	public PointST()                                // construct an empty symbol table of points 
	{
		st = new RedBlackBST<Point2D,Value>();
	}
	
	public boolean isEmpty()                      // is the symbol table empty? 
	{
		return st.size() == 0;
	}
	
	public int size()                         // number of points 
	{
		return st.size();
	}
	
	public void put(Point2D p, Value val)      // associate the value val with point p
	{
		st.put(p, val);
	}
	
	public Value get(Point2D p)                 // value associated with point p 
	{
		return st.get(p);
	}
	
	public boolean contains(Point2D p)            // does the symbol table contain point p? 
	{
		return st.contains(p);
	}
	
	public Iterable<Point2D> points()                       // all points in the symbol table 
	{
		return st.keys();
	}
	
	public Iterable<Point2D> range(RectHV rect)             // all points that are inside the rectangle 
	{
		Iterable<Point2D> ps = points();
		
		for(Point2D p : ps)
		{
			double x = p.x();
			double y = p.y();
		}
	}
	
	public Point2D nearest(Point2D p)             // a nearest neighbor to point p; null if the symbol table is empty 
	{
		if(st.size()==0)
			return null;
		
		Point2D c = st.ceiling(p);
		Point2D f = st.floor(p);
		
		return (p.distanceTo(f) > p.distanceTo(c)) ? c : f;
		
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
