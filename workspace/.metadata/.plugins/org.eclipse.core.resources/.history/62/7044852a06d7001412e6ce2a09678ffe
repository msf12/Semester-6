import java.util.concurrent.Semaphore;


public class Task2 {

	Semaphore dentistReady = new Semaphore(0);
	Semaphore seatCountWriteAccess = new Semaphore(1);
	Semaphore patientReady = new Semaphore(0);
	int numFreeWRSeats;
	
	public Task2() {
		this(3);
	}
	
	public Task2(int N) {
		numFreeWRSeats = N;
	}
	
	public class Dentist implements Runnable {
		public void run() {
			while(true)
			{
				try {
					patientReady.acquire();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
				try {
					seatCountWriteAccess.acquire();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
				numFreeWRSeats += 1;
				
				dentistReady.release();
			}
		}
	}
	
	public class Patient implements Runnable {
		public void run() {
			
		}
	}
	
}
